import random

#충전금액 만들어서 연산돌아가게 하자, 이게 보너스 성정석이 있어서 그냥 단가로는 너무 비싸게 나온다.
#소지성정석 인풋 가능하게, 이프로 만약 성정석 갯수 부족하면 충전해야한다고 띄우고, 소지성적석 안에서 +30이상일떄만 돌아가도록.
#천장 찍고 '소환된 목록'에 11기가 안채워졌다면, 마저 채우기 //소환된 목록이 10연차에 무조건 11기 채워져야 끝나도록

list=['5성','4성','3성']
소지성정석 = 0
소환횟수 = 0
천장 = ['5성']
소환된목록 = []
for i in range(1,500):
    for i in range(1,12):#밑으로 몇단 내릴것인지. 10일때는 밑으로 10칸 출력하겠다는것.
        소환 = random.choices(list,weights=[1.000,3.000,40.000],k=1)#k는 랜덤 돌아가게 하는 횟수. k=10 열번돌게할것이다.
        소환된목록.append(소환[0])
        소환횟수 += 1
        if 소환횟수 == 329:
            print('가여운사람.. 이걸 찍네')
            소환된목록.append(천장[0])
            소환횟수 += 1
            print(소환된목록,소환횟수)
            
            for i in 소환 == [11]:
            소환 = random.choices(list,weights=[1.000,3.000,40.000],k=1)
            소환된목록.append(소환[0])
            소환횟수 += 1
    if '5성' in 소환된목록:
        print(소환된목록)
        print('축 5성')
        break
    else:
        print(소환된목록)
        print('아직 안나옴')
    소환된목록.clear() #여기서 클리어 안해주면, 이때까지 돌린 모든 내역(5성이 나올때까지의 내역)이 계속 쌓여서 나온다.
    #클리어시 들여쓰기 필요
    
연차횟수 = 소환횟수/11
#choices.clear()

print('10연차를 몇번해야했나? : ',(int(연차횟수)),"회")
print('사용한 성정석 : ',format(int(연차횟수*30)),"개")
print('투자해야 하는 금액 : ',format(int(소환횟수*(1230*3))),"원")

